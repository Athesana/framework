<?xml version="1.0" encoding="UTF-8"?>

<!-- Mapper 설정 파일임을 선언 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kh.mvc.member.model.dao.MemberMapper">

	<sql id="selectMemberSql">
		SELECT NO, 
		       ID, 
		       PASSWORD, 
		       ROLE, 
		       NAME, 
		       PHONE, 
		       EMAIL, 
		       ADDRESS, 
		       HOBBY, 
		       STATUS, 
		       ENROLL_DATE, 
		       MODIFY_DATE
		FROM MEMBER
	</sql>

	<resultMap type="Member" id="memberResultMap">

		<id property="no" column="NO"/>
		<result property="id" column="ID"/>
		<result property="password" column="PASSWORD"/>
		<result property="role" column="ROLE"/>
		<result property="name" column="NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="hobby" column="HOBBY"/>
		<result property="status" column="STATUS"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
	</resultMap>

 	<select id="selectCount" resultType="_int">
 		SELECT COUNT(*) FROM MEMBER 
 	</select>
 	
 	<!-- 방법 1 : 별칭 사용 
 	<select id="selectAll" resultType="com.kh.mybatis.member.model.vo.Member">
 		SELECT NO, 
		       ID, 
		       PASSWORD, 
		       ROLE, 
		       NAME, 
		       PHONE, 
		       EMAIL, 
		       ADDRESS, 
		       HOBBY, 
		       STATUS, 
		       ENROLL_DATE AS enrollDate, 
		       MODIFY_DATE AS modifyDate
		FROM MEMBER
		WHERE STATUS = 'Y'
 	-->
 	
 	<!-- 방법 2 : resultMap 사용 -->
 	<!-- resultMap 속성은 위에서 선언한 resultMap의 id를 적는다. -->
 	<select id="selectAll" resultMap="memberResultMap">
 	<!-- 
 		SELECT NO, 
		       ID, 
		       PASSWORD, 
		       ROLE, 
		       NAME, 
		       PHONE, 
		       EMAIL, 
		       ADDRESS, 
		       HOBBY, 
		       STATUS, 
		       ENROLL_DATE, 
		       MODIFY_DATE
		FROM MEMBER
		WHERE STATUS = 'Y'
 	 -->
 	 
 	 <include refid="selectMemberSql" />
 	 WHERE STATUS = 'Y'
 	 
 	</select>
 	
 	<select id="findMemberById" parameterType="string" resultMap="memberResultMap">
 		<include refid="selectMemberSql" />
		WHERE ID= #{id} AND STATUS = 'Y'
 	</select>
 	
 	<insert id="insertMember" parameterType="Member" 
 			useGeneratedKeys="true" keyProperty="no" keyColumn="NO">
 		INSERT INTO MEMBER (
 		   NO, 
	       ID, 
	       PASSWORD, 
	       ROLE, 
	       NAME, 
	       PHONE, 
	       EMAIL, 
	       ADDRESS, 
	       HOBBY, 
	       STATUS, 
	       ENROLL_DATE, 
	       MODIFY_DATE
 		) VALUES (
 		   SEQ_UNO.NEXTVAL,
 		   #{id},
 		   #{password},
 		   DEFAULT,
 		   #{name},
 		   #{phone},
 		   #{email},
 		   #{address},
 		   #{hobby},
 		   DEFAULT,
 		   DEFAULT,
 		   DEFAULT
 		)
 	</insert> 
 	
 	<update id="updateMember" parameterType="Member">
 		UPDATE MEMBER 
 		SET 
 			NAME = #{name},
 			PASSWORD = #{password},
 			PHONE = #{phone},
 			EMAIL = #{email},
 			ADDRESS = #{address},
 			HOBBY = #{hobby},
 			MODIFY_DATE = SYSDATE 
 		WHERE NO = #{no}
 		
 	</update>
 
 	<delete id="deleteMember" parameterType="_int">
		DELETE FROM MEMBER WHERE NO = #{no}
 	</delete>
 	
 
</mapper>